var _ = require('js/rdmGettext')._;
var logActionList =
{
    "project_created":  _("${user} created ${node}"),
    "project_registered": _("${user} registered ${node}"),
    "project_registered_no_user": _("${node} registered"),
    "prereg_registration_initiated": _("${user} submitted for review to the Preregistration Challenge a registration of ${node}"),
    "project_deleted":  _("${user} deleted ${node}"),
    "created_from":     _("${user} created ${node} based on ${template}"),
    "pointer_created":  _("${user} created a link to ${pointer_category} ${pointer}"),
    "pointer_forked":   _("${user} forked a link to ${pointer_category} ${pointer}"),
    "pointer_removed":  _("${user} removed a link to ${pointer_category} ${pointer}"),
    "group_added":    _("${user} added ${group} to ${node}"),
    "group_removed":  _("${user} removed ${group} from ${node}"),
    "group_updated":   _("${user} changed ${group} permissions to ${node}"),
    "made_public":  _("${user} made ${node} public"),
    "made_public_no_user":  Â _("${node} made public"),
    "made_private":     _("${user} made ${node} private"),
    "tag_added":    _("${user} added tag ${tag} to ${node}"),
    "tag_removed":  _("${user} removed tag ${tag} from ${node}"),
    "edit_title":   _("${user} changed the title from ${title_original} to ${title_new}"),
    "edit_description": _("${user} edited description of ${node}"),
    "updated_fields":   _("${user} changed the ${updated_fields} for ${node}"),
    "external_ids_added":   _("${user} created external identifier(s) ${identifiers} on ${node}"),
    "custom_citation_added" : _("${user} created a custom citation for ${node}"),
    "custom_citation_edited" : _("${user} edited a custom citation for ${node}"),
    "custom_citation_removed" : _("${user} removed a custom citation for ${node}"),
    "contributor_added":    _("${user} added ${contributors} as contributor(s) to ${node}"),
    "contributor_removed":  _("${user} removed ${contributors} as contributor(s) from ${node}"),
    "contributors_reordered":   _("${user} reordered contributors for ${node}"),
    "permissions_updated":   _("${user} changed permissions for ${node}"),
    "made_contributor_visible":     _("${user} made non-bibliographic contributor ${contributors} a bibliographic contributor on ${node}"),
    "made_contributor_invisible":   _("${user} made bibliographic contributor ${contributors} a non-bibliographic contributor on ${node}"),
    "wiki_updated":     _("${user} updated wiki page ${page} to version ${version} of ${node}"),
    "wiki_deleted":     _("${user} deleted wiki page ${page} of ${node}"),
    "wiki_renamed":     _("${user} renamed wiki page ${old_page} to ${page} of ${node}"),
    "made_wiki_public":     _("${user} made the wiki of ${node} publicly editable"),
    "made_wiki_private":    _("${user} made the wiki of ${node} privately editable"),
    "addon_added":  _("${user} added addon ${addon} to ${node}"),
    "addon_removed":    _("${user} removed addon ${addon} from ${node}"),
    "addon_file_moved":     _("${user} moved ${source} to ${destination} in ${node}"),
    "addon_file_copied":    _("${user} copied ${source} to ${destination} in ${node}"),
    "addon_file_renamed":   _("${user} renamed ${source} to ${destination} in ${node}"),
    "folder_created":   _("${user} created a folder in ${node}"),
    "file_added":   _("${user} added file ${path} to ${node}"),
    "file_updated":     _("${user} updated file in ${node}"),
    "file_removed":     _("${user} removed ${path_type} ${path} from ${node}"),
    "file_restored":    _("${user} restored file ${path} from ${node}"),
    "file_metadata_updated": _("${user} updated the file metadata for ${path}"),
    "checked_out":  _("${user} checked out ${kind} ${path} from ${node}"),
    "checked_in":   _("${user} checked in ${kind} ${path} to ${node}"),
    "comment_added":    _("${user} added a comment ${comment_location} in ${node}"),
    "comment_removed":  _("${user} deleted a comment ${comment_location} in ${node}"),
    "comment_restored":  _("${user} restored a comment ${comment_location}  in ${node}"),
    "comment_updated":  _("${user} updated a comment ${comment_location} in ${node}"),
    "embargo_initiated":    _("${user} initiated an embargoed registration of ${node}"),
    "embargo_approved":     _("${user} approved embargoed registration of ${node}"),
    "embargo_approved_no_user": _("Embargo of registration of ${node} approved"),
    "embargo_cancelled":    _("${user} cancelled embargoed registration of ${node}"),
    "embargo_completed":    _("${user} completed embargo of ${node}"),
    "embargo_completed_no_user": _("Embargo for ${node} completed"),
    "embargo_terminated": _("Embargo for ${node} ended"),
    "retraction_initiated":     _("${user} initiated withdrawal of registration of ${node}"),
    "retraction_initiated_no_user": _("A withdrawal of registration of ${node} is proposed"),
    "retraction_approved":  _("${user} approved withdrawal of registration of ${node}"),
    "retraction_cancelled":     _("${user} cancelled withdrawal of registration of ${node}"),
    "registration_initiated":   _("${user} initiated registration of ${node}"),
    "registration_approved":    _("${user} approved registration of ${node}"),
    "registration_approved_no_user": _("Registration of ${node} approved"),
    "registration_cancelled":   _("${user} cancelled registration of ${node}"),
    "node_created":     _("${user} created ${node}"),
    "node_forked":  _("${user} created fork from ${forked_from}"),
    "node_removed":  _("${user} removed ${node}"),
    "node_access_requests_enabled": _("${user} enabled access requests for ${node}"),
    "node_access_requests_disabled": _("${user} disabled access requests for ${node}"),
    "license_changed" : _("${user} updated the license of ${node} ${license}"),
    "file_tag_added": _("${user} added tag ${tag} to ${path} in ${storage_name} in ${node}"),
    "file_tag_removed": _("${user} removed tag ${tag} from ${path} in ${storage_name} in ${node}"),
    "osf_storage_file_added" : _("${user} added file ${path} to ${storage_name} in ${node}"),
    "osf_storage_folder_created" : _("${user} created folder ${path} in ${storage_name} in ${node}"),
    "osf_storage_file_updated" : _("${user} updated file ${path} in ${storage_name} in ${node}"),
    "osf_storage_file_removed" : _("${user} removed ${path_type} ${path} from ${storage_name} in ${node}"),
    "affiliated_institution_added": _("${user} added ${institution} affiliation to ${node}"),
    "affiliated_institution_removed": _("${user} removed ${institution} affiliation from ${node}"),
    "preprint_initiated": _("${user} made ${node} a ${preprint} on ${preprint_provider} Preprints"),
    "preprint_file_updated": _("${user} updated the primary file of this ${preprint} on ${preprint_provider} Preprints"),
    "preprint_license_updated": _("${user} updated the license of this ${preprint} on ${preprint_provider} Preprints ${license}"),
    "subjects_updated": _("${user} updated the subjects on ${node} to ${subjects}"),
    "view_only_link_added": _("${user} created ${anonymous_link} view-only link to ${node}"),
    "view_only_link_removed": _("${user} removed ${anonymous_link} view-only link to ${node}"),
    "mapcore_map_group_not_created": _("[MAPCORE_SYNC:ERROR] ${user} cannot create a new mAP group for GRDM project <${node}> (See logs for details)"),
    "mapcore_map_group_not_updated": _("[MAPCORE_SYNC:ERROR] mAP group for GRDM project <${node}> cannot be updated (See logs for details)"),
    "mapcore_rdm_project_not_updated": _("[MAPCORE_SYNC:ERROR] GRDM project <${node}> cannot be updated with mAP group (See logs for details)"),
    "mapcore_rdm_unknown_user": _("[MAPCORE_SYNC:NOTICE] Unknown (unregistered in GRDM) users belong to mAP group <${node}> (ignored) (See logs for details)")
}
